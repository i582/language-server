========================================================================
Global function completion
========================================================================
primitive Int;

fun add(a: Int, b: Int): Int {
    return a + b;
}

fun multiply(x: Int, y: Int): Int {
    return x * y;
}

fun test() {
    <caret>
}
------------------------------------------------------------------------
2  add(a: Int, b: Int): Int
2  multiply(x: Int, y: Int): Int
2  test()
13 false
13 null
13 return;
13 true

========================================================================
Fun completion with parameters
========================================================================
primitive Int;

fun add(a: Int, b: Int): Int {
    return a + b;
}

fun test() {
    let result = <caret>
}
------------------------------------------------------------------------
2  add(a: Int, b: Int): Int
2  test()
5  result: unknown
13 false
13 null
13 true

========================================================================
Extends function completion
========================================================================
primitive Int;

extends fun increment(self: Int): Int {
    return self + 1;
}

extends fun double(self: Int): Int {
    return self * 2;
}

fun test() {
    let num: Int = 1;
    num.<caret>
}
------------------------------------------------------------------------
2  double(self: Int): Int
2  increment(self: Int): Int

========================================================================
Fun completion in expression // TODO: remove x?
========================================================================
primitive Int;

fun add(a: Int, b: Int): Int {
    return a + b;
}

fun test() {
    let x = add(<caret>)
}
------------------------------------------------------------------------
2  add(a: Int, b: Int): Int
2  test()
5  x: Int
13 false
13 null
13 true

========================================================================
Native function completion
========================================================================
primitive Int;

@name("op_add")
native add(a: Int, b: Int): Int;

@name("op_mul")
native multiply(x: Int, y: Int): Int;

fun test() {
    <caret>
}
------------------------------------------------------------------------
2  add(a: Int, b: Int): Int
2  multiply(x: Int, y: Int): Int
2  test()
13 false
13 null
13 return;
13 true
