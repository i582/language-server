{
    "name": "tact-vscode",
    "displayName": "Tact Language Support",
    "description": "Support for Tact Language in VS Code",
    "keywords": [
        "TON",
        "The Open Network",
        "Tact",
        "Smart contract"
    ],
    "version": "0.0.1",
    "engines": {
        "vscode": "^1.63.0"
    },
    "activationEvents": [
        "onLanguage:tact"
    ],
    "categories": [
        "Programming Languages"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/i582/language-server"
    },
    "author": "TON Studio",
    "publisher": "ton-studio",
    "license": "MIT",
    "scripts": {
        "test": "yarn jest",
        "build": "webpack",
        "package": "npx vsce package --no-yarn",
        "format": "prettier --write --cache .",
        "format:check": "prettier --check --cache .",
        "grammar:wasm": "yarn grammar:tact:wasm && yarn grammar:fift:wasm",
        "grammar:tact:wasm": "cd tree-sitter-tact && tree-sitter generate && tree-sitter build --wasm",
        "grammar:fift:wasm": "cd tree-sitter-fift && tree-sitter generate && tree-sitter build --wasm",
        "watch": "webpack --watch",
        "test:e2e": "yarn test:e2e:compile && ts-node src/e2e/runTest.ts",
        "test:e2e:coverage": "yarn test:e2e:compile && c8 ts-node src/e2e/runTest.ts",
        "test:e2e:compile": "tsc -p src/e2e/tsconfig.json",
        "postinstall": "husky"
    },
    "main": "../../dist/client",
    "contributes": {
        "languages": [
            {
                "id": "tact",
                "aliases": [
                    "Tact"
                ],
                "extensions": [
                    ".tact"
                ],
                "icon": {
                    "light": "./ton-icon.svg",
                    "dark": "./ton-icon.svg"
                },
                "configuration": "./languages/language-configuration.json"
            },
            {
                "id": "fift",
                "aliases": [
                    "Fift"
                ],
                "extensions": [
                    ".fif"
                ],
                "icon": {
                    "light": "./ton-icon.svg",
                    "dark": "./ton-icon.svg"
                },
                "configuration": "./languages/fift-language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "tact",
                "scopeName": "source.tact",
                "path": "./syntaxes/.tmLanguage.json"
            },
            {
                "language": "fift",
                "scopeName": "source.fift",
                "path": "./syntaxes/fift.tmLanguage.json"
            }
        ],
        "snippets": [
            {
                "language": "tact",
                "path": "./snippets/snippets.json"
            }
        ],
        "commands": [
            {
                "command": "tact.showParent",
                "title": "Show Parent",
                "category": "tact"
            },
            {
                "command": "tact/getTypeAtPosition",
                "title": "Get Type At Position",
                "category": "tact"
            },
            {
                "command": "tact/executeHoverProvider",
                "title": "Get Documentation At Position",
                "category": "tact"
            },
            {
                "command": "tact/executeGetScopeProvider",
                "title": "Get Scope Information"
            }
        ],
        "configuration": {
            "title": "Tact",
            "type": "object",
            "properties": {
                "tact.stdlib.path": {
                    "type": "string",
                    "default": null,
                    "description": "Path to Tact standard library. If empty, will try to find in node_modules"
                },
                "tact.hints.types": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show type hints for variables and expressions"
                },
                "tact.hints.parameters": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show parameter name hints in function calls"
                },
                "tact.codeLens.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable/disable all code lens"
                },
                "tact.hints.exitCodeFormat": {
                    "type": "string",
                    "enum": [
                        "decimal",
                        "hex"
                    ],
                    "default": "decimal",
                    "description": "Format of exit codes in require() hints",
                    "enumDescriptions": [
                        "Show exit codes in decimal format (e.g. 1234)",
                        "Show exit codes in hexadecimal format (e.g. 0x4D2)"
                    ]
                },
                "tact.hints.showMethodId": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show method ID hints for contract functions"
                }
            }
        },
        "jsonValidation": [
            {
                "fileMatch": [
                    "tact.config.json"
                ],
                "url": "https://raw.githubusercontent.com/tact-lang/tact/refs/heads/main/src/config/configSchema.json"
            }
        ]
    },
    "dependencies": {
        "vscode-languageclient": "^8.0.2"
    },
    "devDependencies": {
        "@types/node": "^22.2.0",
        "@types/vscode": "^1.63.0",
        "ts-loader": "^9.5.1",
        "ts-node": "^10.9.2",
        "typescript": "^5.7.0",
        "vsce": "2.15.0"
    },
    "packageManager": "yarn@4.6.0",
    "prettier": {
        "arrowParens": "avoid",
        "bracketSpacing": false,
        "printWidth": 100,
        "semi": false,
        "singleQuote": false,
        "tabWidth": 4,
        "trailingComma": "all",
        "useTabs": false,
        "overrides": [
            {
                "files": [
                    "*.yaml",
                    "*.yml"
                ],
                "options": {
                    "tabWidth": 2
                }
            }
        ]
    }
}
