=========
@trigger .
Global function completion
=========
primitive Int;

fun add(a: Int, b: Int): Int {
    return a + b;
}

fun multiply(x: Int, y: Int): Int {
    return x * y;
}

fun test() {
    <caret>
}
------------
Int
add
multiply
test
false
return;
true

=========
@trigger .
Fun completion with parameters
=========
primitive Int;

fun add(a: Int, b: Int): Int {
    return a + b;
}

fun test() {
    let result = <caret>
}
------------
Int
add
test
result
false
true

=========
@trigger .
Extends function completion
=========
primitive Int;

extends fun increment(self: Int): Int {
    return self + 1;
}

extends fun double(self: Int): Int {
    return self * 2;
}

fun test() {
    let num: Int = 1;
    num.<caret>
}
------------
double
increment
false
true

=========
@trigger .
Fun completion in expression // TODO: remove x?
=========
primitive Int;

fun add(a: Int, b: Int): Int {
    return a + b;
}

fun test() {
    let x = add(<caret>)
}
------------
Int
add
test
x
false
true

=========
@trigger .
Native function completion
=========
primitive Int;

@name("op_add")
native add(a: Int, b: Int): Int;

@name("op_mul")
native multiply(x: Int, y: Int): Int;

fun test() {
    <caret>
}
------------
Int
add
multiply
test
false
return;
true
